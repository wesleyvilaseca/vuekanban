{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6022a06c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"row flex-row flex-sm-nowrap py-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAkC;;uBAA7CC,oBAAoD,OAApDC,UAAoD","names":["class","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/kanban/KanbanView.vue"],"sourcesContent":["<template>\n  <div class=\"row flex-row flex-sm-nowrap py-3\"></div>\n</template>\n\n<script>\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: { Container, CardComponent, Draggable },\n  data: () => ({\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {},\n    },\n    cards: {\n      backlog: [\n        {\n          id: 1,\n          title: \"primeiro card\",\n          subtitle: \"\",\n          description: \"primeiro card desc\",\n        },\n        {\n          id: 2,\n          title: \"segundo card\",\n          subtitle: \"\",\n          description: \"segundo card desc\",\n        },\n        {\n          id: 3,\n          title: \"terceiro card\",\n          subtitle: \"\",\n          description: \"primeiro card desc\",\n        },\n      ],\n      dev: [\n        {\n          id: 4,\n          title: \"title quarto card\",\n          subtitle: \"\",\n          description: \"desc quarto card\",\n        },\n        {\n          id: 5,\n          title: \"title quinto card\",\n          subtitle: \"\",\n          description: \"desc quinto card\",\n        },\n        {\n          id: 6,\n          title: \"title sexto card\",\n          subtitle: \"\",\n          description: \"desc sexto card\",\n        },\n      ],\n      testes: [\n        {\n          id: 7,\n          title: \"title setimo card\",\n          subtitle: \"\",\n          description: \"desc setimo card\",\n        },\n      ],\n      concluido: [],\n    },\n    pages: [\n      {\n        name: \"Início\",\n        link: \"/\",\n      },\n    ],\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({ name: this.newTask });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n\n    handleDragStart(lane, dragResult) {\n      const { payload, isSource } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          //lane é boar, exemplo backlog\n          lane,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.cards[lane][payload.index],\n          },\n        };\n      }\n    },\n    handleDrop(lane, dropResult) {\n      const { removedIndex, addedIndex } = dropResult;\n      if (lane === this.dragginCard.lane && removedIndex === addedIndex) {\n        return;\n      }\n\n      if (removedIndex !== null) {\n        //vai remover o index\n        this.cards[lane].splice(removedIndex, 1);\n      }\n\n      if (addedIndex !== null) {\n        this.cards[lane].splice(addedIndex, 0, this.dragginCard.cardData);\n      }\n    },\n\n    getChildPayload(index) {\n      return {\n        index,\n      };\n    },\n  },\n  computed: {\n    ...mapState({\n      board: (state) => state.kanban.board,\n    }),\n  },\n  mounted() {\n    this.getBoard().catch((err) => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.placeholder {\n  background: rgba(33, 33, 33, 0.08) !important;\n  border-radius: 0.4rem !important;\n  transform: scaleY(0.85);\n  transform-origin: 0% 0%;\n}\n\n.card-body-atv {\n  min-height: 500px;\n}\n\n.smooth-dnd-container {\n  min-height: 500px !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}