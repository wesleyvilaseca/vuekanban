{"ast":null,"code":"const actions = {\n  // Busca um produto em especifico\n  getProductId: (context, id) => {\n    return context.state.listProducts.filter(data => data.id == id);\n  },\n  // Busca os produtos\n  fetchProducts({\n    commit\n  }) {\n    console.log(\"busca produtos\");\n    fetch(this.state.apiURL + \"products\").then(response => response.json()).then(dados => {\n      commit(\"setProducts\", dados.data);\n      return true;\n    });\n  },\n  // Deleta um produto\n  deleteProducts({\n    commit\n  }, item) {\n    fetch(this.state.apiURL + \"products/\" + item.id + \"/remove\", {\n      method: \"POST\"\n    }).then(function (response) {\n      if (response.ok) {\n        commit(\"removeProduct\", item.id);\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O produto ${item.title} foi deletado com sucesso.`, \"\", \"success\");\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar deletar o produto.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // Metodo responsável por realizar a inserção de um novo produto\n  insertProduct({\n    commit\n  }, item) {\n    // Repassa para obj\n    // var list = this.state.listProducts;\n\n    // Processa a api\n    fetch(this.state.apiURL + \"products/\", {\n      method: \"POST\",\n      body: item\n    }).then(function (response) {\n      if (response.ok) {\n        // Recupera o retorno\n        // let data = response.json();\n        // data = data.data;\n\n        // // Atualiza a lista\n        // list.push(data);\n\n        // salva a lista atualizada\n        commit(\"setProducts\", '');\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O produto foi inserido com sucesso.`, \"\", \"success\");\n        return true;\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar inserir o produto.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // Responsável por alterar os dados de um produto\n  updateProduct({\n    commit\n  }, {\n    obj,\n    form\n  }) {\n    // Processa a api\n    return fetch(this.state.apiURL + \"products/\" + obj.id + \"/edit\", {\n      method: \"POST\",\n      body: form\n    }).then(function (response) {\n      if (response.ok) {\n        // Altera na listagem\n        commit(\"updateProductMutation\", obj);\n\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O produto foi alterado com sucesso.`, \"\", \"success\");\n        return true;\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar alterar o produto.\", \"\", \"error\");\n        return false;\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  }\n};\nexport default actions;","map":{"version":3,"names":["actions","getProductId","context","id","state","listProducts","filter","data","fetchProducts","commit","console","log","fetch","apiURL","then","response","json","dados","deleteProducts","item","method","ok","Toast","fire","title","catch","error","message","insertProduct","body","updateProduct","obj","form"],"sources":["/var/www/html/vue-projects/kanban-vuejs/src/store/modules/products/actions.js"],"sourcesContent":["const actions = {\n    // Busca um produto em especifico\n    getProductId: (context, id) => {\n        return context.state.listProducts.filter(data => data.id == id);\n    },\n\n    // Busca os produtos\n    fetchProducts({ commit }) {\n        console.log(\"busca produtos\")\n        fetch(this.state.apiURL + \"products\")\n            .then(response => response.json())\n            .then(dados => {\n                commit(\"setProducts\", dados.data)\n                return true;\n            })\n    },\n\n    // Deleta um produto\n    deleteProducts({commit}, item) {\n        fetch(this.state.apiURL + \"products/\" + item.id + \"/remove\", { method: \"POST\" })\n            .then(function (response) {\n                if (response.ok) {\n                    commit(\"removeProduct\", item.id)\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O produto ${item.title} foi deletado com sucesso.`, \"\", \"success\");\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar deletar o produto.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // Metodo responsável por realizar a inserção de um novo produto\n    insertProduct({commit}, item) {\n        // Repassa para obj\n        // var list = this.state.listProducts;\n\n        // Processa a api\n        fetch(this.state.apiURL + \"products/\", { method: \"POST\", body: item })\n            .then(function (response) {\n                if (response.ok) {\n                    // Recupera o retorno\n                    // let data = response.json();\n                    // data = data.data;\n\n                    // // Atualiza a lista\n                    // list.push(data);\n\n                    // salva a lista atualizada\n                    commit(\"setProducts\", '')\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O produto foi inserido com sucesso.`, \"\", \"success\");\n                    return true;\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar inserir o produto.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // Responsável por alterar os dados de um produto\n    updateProduct({commit}, { obj, form }) {\n        // Processa a api\n        return fetch(this.state.apiURL + \"products/\" + obj.id + \"/edit\", { method: \"POST\", body: form })\n            .then(function (response) {\n                if (response.ok) {\n                    // Altera na listagem\n                    commit(\"updateProductMutation\", obj);\n\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O produto foi alterado com sucesso.`, \"\", \"success\");\n                    return true;\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar alterar o produto.\", \"\", \"error\");\n                    return false;\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n};\n\nexport default actions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}