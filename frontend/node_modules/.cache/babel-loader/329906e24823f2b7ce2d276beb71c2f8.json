{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6022a06c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"row flex-row flex-sm-nowrap py-3\"\n};\nconst _hoisted_2 = {\n  class: \"card bg-light\"\n};\nconst _hoisted_3 = {\n  class: \"card-body card-body-atv\"\n};\nconst _hoisted_4 = {\n  class: \"lane-title\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\",\n  class: \"card-link\"\n}, \"Card link\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\",\n  class: \"card-link\"\n}, \"Another link\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  const _component_Draggable = _resolveComponent(\"Draggable\");\n  const _component_Container = _resolveComponent(\"Container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.boards, (board, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-sm-6 col-md-4 col-xl-3\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString(board.title), 1 /* TEXT */), _createVNode(_component_Container, {\n      \"group-name\": \"trello\",\n      onDragStart: $event => $options.handleDragStart(index, $event),\n      onDrop: $event => $options.handleDrop(index, $event),\n      \"get-child-payload\": $options.getChildPayload\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(board.cards, (card, index) => {\n        return _openBlock(), _createBlock(_component_Draggable, {\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_CardComponent, {\n            class: \"mt-2\",\n            title: card.title,\n            subtitle: ''\n          }, {\n            body: _withCtx(() => [_createTextVNode(_toDisplayString(card.description), 1 /* TEXT */)]),\n\n            footer: _withCtx(() => [_hoisted_5, _hoisted_6]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onDragStart\", \"onDrop\", \"get-child-payload\"])])])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAkC;;EAMpCA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAyB;;EAC9BA,KAAK,EAAC;AAAY;gEAWdC,oBAA2C;EAAxCC,IAAI,EAAC,GAAG;EAACF,KAAK,EAAC;GAAY,WAAS;gEACvCC,oBAA8C;EAA3CC,IAAI,EAAC,GAAG;EAACF,KAAK,EAAC;GAAY,cAAY;;;;;;uBApB1DG,oBA4BM,OA5BNC,UA4BM,sBA3BJD,oBA0BME,6BAxBqBC,WAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAFtBL,oBA0BM;MAzBJH,KAAK,EAAC,4BAA4B;MAEjCS,GAAG,EAAED;QAENP,oBAoBM,OApBNS,UAoBM,GAnBJT,oBAkBM,OAlBNU,UAkBM,GAjBJV,oBAA6C,MAA7CW,UAA6C,mBAAnBL,KAAK,CAACM,KAAK,kBACrCC,aAeYC;MAdV,YAAU,EAAC,QAAQ;MAClBC,WAAU,YAAEC,wBAAe,CAACT,KAAK,EAAEU,MAAM;MACzCC,MAAI,YAAEF,mBAAU,CAACT,KAAK,EAAEU,MAAM;MAC9B,mBAAiB,EAAED;;wBAET,MAAoC,oBAA/Cd,oBAQYE,6BARuBE,KAAK,CAACa,KAAK,GAA3BC,IAAI,EAAEb,KAAK;6BAA9Bc,aAQYC;UARqCd,GAAG,EAAED;QAAK;4BACzD,MAMgB,CANhBM,aAMgBU;YANDxB,KAAK,EAAC,MAAM;YAAEa,KAAK,EAAEQ,IAAI,CAACR,KAAK;YAAGY,QAAQ,EAAE;;YACxCC,IAAI,WAAE,MAAsB,mCAAnBL,IAAI,CAACM,WAAW;;YACzBC,MAAM,WACrB,MAA2C,CAA3CC,UAA2C,EAC3CC,UAA8C","names":["class","_createElementVNode","href","_createElementBlock","_hoisted_1","_Fragment","_ctx","board","index","key","_hoisted_2","_hoisted_3","_hoisted_4","title","_createVNode","_component_Container","onDragStart","$options","$event","onDrop","cards","card","_createBlock","_component_Draggable","_component_CardComponent","subtitle","body","description","footer","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/kanban/KanbanView.vue"],"sourcesContent":["<template>\n  <div class=\"row flex-row flex-sm-nowrap py-3\">\n    <div\n      class=\"col-sm-6 col-md-4 col-xl-3\"\n      v-for=\"(board, index) in boards\"\n      :key=\"index\"\n    >\n      <div class=\"card bg-light\">\n        <div class=\"card-body card-body-atv\">\n          <h2 class=\"lane-title\">{{ board.title }}</h2>\n          <Container\n            group-name=\"trello\"\n            @drag-start=\"handleDragStart(index, $event)\"\n            @drop=\"handleDrop(index, $event)\"\n            :get-child-payload=\"getChildPayload\"\n          >\n            <Draggable v-for=\"(card, index) in board.cards\" :key=\"index\">\n              <CardComponent class=\"mt-2\" :title=\"card.title\" :subtitle=\"''\">\n                <template v-slot:body> {{ card.description }} </template>\n                <template v-slot:footer>\n                  <a href=\"#\" class=\"card-link\">Card link</a>\n                  <a href=\"#\" class=\"card-link\">Another link</a>\n                </template>\n              </CardComponent>\n            </Draggable>\n          </Container>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: { Container, CardComponent, Draggable },\n  data: () => ({\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {},\n    },\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({ name: this.newTask });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n\n    handleDragStart(index, dragResult) {\n      const { payload, isSource } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          //lane é board, exemplo backlog\n          lane,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.boards[index][payload.index],\n          },\n        };\n      }\n    },\n    handleDrop(index, dropResult) {\n      const { removedIndex, addedIndex } = dropResult;\n      if (index === this.dragginCard.index && removedIndex === addedIndex) {\n        return;\n      }\n\n      if (removedIndex !== null) {\n        //vai remover o index\n        this.boards[index].splice(removedIndex, 1);\n      }\n\n      if (addedIndex !== null) {\n        this.boards[index].splice(addedIndex, 0, this.dragginCard.cardData);\n      }\n    },\n\n    getChildPayload(index) {\n      return {\n        index,\n      };\n    },\n  },\n  computed: {\n    ...mapState({\n      boards: (state) => state.kanban.board,\n    }),\n  },\n  mounted() {\n    this.getBoard().catch((err) => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.placeholder {\n  background: rgba(33, 33, 33, 0.08) !important;\n  border-radius: 0.4rem !important;\n  transform: scaleY(0.85);\n  transform-origin: 0% 0%;\n}\n\n.card-body-atv {\n  min-height: 500px;\n}\n\n.smooth-dnd-container {\n  min-height: 500px !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}