{"ast":null,"code":"import { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"FormProducts\",\n  props: {\n    title: {\n      type: String,\n      required: false,\n      default: \"\"\n    },\n    description: {\n      type: String,\n      required: false,\n      default: \"\"\n    },\n    item: {\n      type: Object,\n      required: false\n    }\n  },\n  data: () => ({\n    valida: 0,\n    produto: {\n      title: \"\",\n      description: \"\",\n      brand_id: \"\"\n    }\n  }),\n  methods: {\n    ...mapActions([\"fetchBrands\"]),\n    processaForm() {\n      let vm = this;\n      vm.valida = 1; // ativa a validação visual\n\n      // Verifica se preencheu o titulo\n      if (vm.produto.title === \"\" || vm.produto.title === null) {\n        return false;\n      }\n\n      // Verifica se preencheu a descricao\n      if (vm.produto.description === \"\" || vm.produto.description === null) {\n        return false;\n      }\n\n      // Verifica se preencheu a descricao\n      if (vm.produto.brand_id === \"\" || vm.produto.brand_id === null) {\n        return false;\n      }\n\n      // Retorna o conteudo\n      this.$emit(\"processaFormulario\", vm.produto);\n    }\n  },\n  updated() {\n    if (this.item) {\n      this.produto = this.item;\n    }\n  },\n  computed: {\n    ...mapState({\n      listBrands: state => state.brands.listBrands\n    })\n  }\n};","map":{"version":3,"mappings":"AAwEA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXJ,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX,CAAC;IACDE,IAAI,EAAE;MACJL,IAAI,EAAEM,MAAM;MACZJ,QAAQ,EAAE;IACZ;EACF,CAAC;EACDK,IAAI,EAAE,OAAO;IACXC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;MACPV,KAAK,EAAE,EAAE;MACTK,WAAW,EAAE,EAAE;MACfM,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,GAAGhB,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;IAE9BiB,YAAY,GAAG;MACb,IAAIC,EAAC,GAAI,IAAI;MACbA,EAAE,CAACL,MAAK,GAAI,CAAC,EAAE;;MAEf;MACA,IAAIK,EAAE,CAACJ,OAAO,CAACV,KAAI,KAAM,EAAC,IAAKc,EAAE,CAACJ,OAAO,CAACV,KAAI,KAAM,IAAI,EAAE;QACxD,OAAO,KAAK;MACd;;MAEA;MACA,IAAIc,EAAE,CAACJ,OAAO,CAACL,WAAU,KAAM,EAAC,IAAKS,EAAE,CAACJ,OAAO,CAACL,WAAU,KAAM,IAAI,EAAE;QACpE,OAAO,KAAK;MACd;;MAEA;MACA,IAAIS,EAAE,CAACJ,OAAO,CAACC,QAAO,KAAM,EAAC,IAAKG,EAAE,CAACJ,OAAO,CAACC,QAAO,KAAM,IAAI,EAAE;QAC9D,OAAO,KAAK;MACd;;MAEA;MACA,IAAI,CAACI,KAAK,CAAC,oBAAoB,EAAED,EAAE,CAACJ,OAAO,CAAC;IAC9C;EACF,CAAC;EACDM,OAAO,GAAG;IACR,IAAI,IAAI,CAACV,IAAI,EAAE;MACb,IAAI,CAACI,OAAM,GAAI,IAAI,CAACJ,IAAI;IAC1B;EACF,CAAC;EACDW,QAAQ,EAAE;IACR,GAAGpB,QAAQ,CAAC;MACVqB,UAAU,EAAGC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF;IACtC,CAAC;EACH;AACF,CAAC","names":["mapActions","mapState","name","props","title","type","String","required","default","description","item","Object","data","valida","produto","brand_id","methods","processaForm","vm","$emit","updated","computed","listBrands","state","brands"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/components/products/FormProducts.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h4 class=\"mt-0 header-title\">{{ title }}</h4>\n      <p class=\"sub-title\" v-if=\"description.length\">{{ description }}</p>\n\n      <div class=\"form-group\">\n        <label>Título do produto</label>\n        <input\n          type=\"text\"\n          v-if=\"valida > 0 && produto.title.length === 0\"\n          class=\"form-control valida\"\n          placeholder=\"Ex: Celular\"\n          v-model=\"produto.title\"\n        />\n        <input\n          type=\"text\"\n          v-else\n          class=\"form-control\"\n          placeholder=\"Ex: Celular\"\n          v-model=\"produto.title\"\n        />\n        <span v-if=\"valida > 0 && produto.title.length === 0\" class=\"valida\"\n          >Preecha esse campo.</span\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label>Descrição</label>\n        <input\n          type=\"text\"\n          v-if=\"valida > 0 && produto.description.length === 0\"\n          class=\"form-control valida\"\n          placeholder=\"Descrição sobre o produto\"\n          v-model=\"produto.description\"\n        />\n        <input\n          type=\"text\"\n          v-else\n          class=\"form-control\"\n          placeholder=\"Descrição sobre o produto\"\n          v-model=\"produto.description\"\n        />\n        <span\n          v-if=\"valida > 0 && produto.description.length === 0\"\n          class=\"valida\"\n          >Preecha esse campo.</span\n        >\n      </div>\n\n      <div content=\"form-group\">\n        <label>Marca</label>\n        <select class=\"form-control\" v-model=\"produto.brand_id\">\n          <option v-for=\"brand in listBrands\" :key=\"brand.id\" :value=\"brand.id\">\n            {{ brand.name }}\n          </option>\n        </select>\n        <span\n          v-if=\"valida > 0 && produto.description.length === 0\"\n          class=\"valida\"\n          >Preecha esse campo.</span\n        >\n      </div>\n\n      <div class=\"form-group mt-4\">\n        <button class=\"btn btn-primary\" @click=\"processaForm()\">Salvar</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"vuex\";\n\nexport default {\n  name: \"FormProducts\",\n  props: {\n    title: {\n      type: String,\n      required: false,\n      default: \"\",\n    },\n    description: {\n      type: String,\n      required: false,\n      default: \"\",\n    },\n    item: {\n      type: Object,\n      required: false,\n    },\n  },\n  data: () => ({\n    valida: 0,\n    produto: {\n      title: \"\",\n      description: \"\",\n      brand_id: \"\",\n    },\n  }),\n  methods: {\n    ...mapActions([\"fetchBrands\"]),\n\n    processaForm() {\n      let vm = this;\n      vm.valida = 1; // ativa a validação visual\n\n      // Verifica se preencheu o titulo\n      if (vm.produto.title === \"\" || vm.produto.title === null) {\n        return false;\n      }\n\n      // Verifica se preencheu a descricao\n      if (vm.produto.description === \"\" || vm.produto.description === null) {\n        return false;\n      }\n\n      // Verifica se preencheu a descricao\n      if (vm.produto.brand_id === \"\" || vm.produto.brand_id === null) {\n        return false;\n      }\n\n      // Retorna o conteudo\n      this.$emit(\"processaFormulario\", vm.produto);\n    },\n  },\n  updated() {\n    if (this.item) {\n      this.produto = this.item;\n    }\n  },\n  computed: {\n    ...mapState({\n      listBrands: (state) => state.brands.listBrands,\n    }),\n  },\n};\n</script>\n\n<style>\n.form-control.valida {\n  border-color: #f81909;\n}\nspan.valida {\n  color: #f81909;\n  padding-top: 3px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}