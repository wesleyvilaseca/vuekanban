{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  // Busca os options value\n  fetchOptionsValue(context) {\n    console.log(\"busca options value\");\n    fetch(context.rootState.apiURL + \"options-value\").then(response => response.json()).then(dados => {\n      context.commit(\"setOptionsValue\", dados.data);\n      return true;\n    });\n  },\n  deleteValueOption(context, item) {\n    fetch(context.rootState.apiURL + \"options-value/\" + item.id + \"/remove\", {\n      method: \"POST\"\n    }).then(function (response) {\n      if (response.ok) {\n        context.commit(\"removeOptionValue\", item.id);\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O item ${item.name} foi deletado com sucesso.`, \"\", \"success\");\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar deletar o item.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // Metodo responsável por realizar a inserção de um novo produto\n  insertOptionValue(context, item) {\n    // Processa a api\n    fetch(context.rootState.apiURL + \"options-value/\", {\n      method: \"POST\",\n      body: item\n    }).then(function (response) {\n      if (response.ok) {\n        context.dispatch(\"fetchOptionsValue\");\n\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O valor foi inserido com sucesso.`, \"\", \"success\");\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar inserir o valor.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // -------------------------------------------\n\n  // Busca uma option em especifico\n  getOptionId: (context, id) => {\n    return context.state.listOptions.filter(data => data.id == id);\n  },\n  // Busca os options\n  fetchOptions(context) {\n    console.log(\"busca options\");\n    fetch(context.rootState.apiURL + \"options\").then(response => response.json()).then(dados => {\n      context.commit(\"setOptions\", dados.data);\n      return true;\n    });\n  },\n  // Deleta um produto\n  deleteOptions(context, item) {\n    fetch(context.rootState.apiURL + \"options/\" + item.id + \"/remove\", {\n      method: \"POST\"\n    }).then(function (response) {\n      if (response.ok) {\n        context.commit(\"removeOption\", item.id);\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O item ${item.title} foi deletado com sucesso.`, \"\", \"success\");\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar deletar o item.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // Metodo responsável por realizar a inserção de um novo produto\n  insertOption(context, item) {\n    // Repassa para obj\n    var list = context.state.listOptions;\n\n    // Processa a api\n    fetch(context.rootState.apiURL + \"options/\", {\n      method: \"POST\",\n      body: item\n    }).then(function (response) {\n      if (response.ok) {\n        // Recupera o retorno\n        let data = response.json();\n        data = data.data;\n\n        // Atualiza a lista\n        list.push(data);\n\n        // salva a lista atualizada\n        context.commit(\"setOptions\", list);\n\n        // eslint-disable-next-line no-undef\n        Toast.fire(`O item foi inserido com sucesso.`, \"\", \"success\");\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar inserir o item.\", \"\", \"error\");\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  },\n  // Altera um option\n  updateOption(context, {\n    obj,\n    form\n  }) {\n    // Processa a api\n    return fetch(context.rootState.apiURL + \"options/\" + obj.id + \"/edit\", {\n      method: \"POST\",\n      body: form\n    }).then(function (response) {\n      if (response.ok) {\n        // Altera na listagem\n        context.commit(\"updateOptionMutation\", obj);\n\n        // eslint-disable-next-line no-undef\n        Toast.fire(`A informação foi alterada com sucesso.`, \"\", \"success\");\n        return true;\n      } else {\n        // eslint-disable-next-line no-undef\n        Toast.fire(\"Ocorreu um erro ao tentar editar.\", \"\", \"error\");\n        return false;\n      }\n    }).catch(function (error) {\n      // eslint-disable-next-line no-undef\n      Toast.fire(error.message, \"\", \"error\");\n    });\n  }\n};","map":{"version":3,"names":["fetchOptionsValue","context","console","log","fetch","rootState","apiURL","then","response","json","dados","commit","data","deleteValueOption","item","id","method","ok","Toast","fire","name","catch","error","message","insertOptionValue","body","dispatch","getOptionId","state","listOptions","filter","fetchOptions","deleteOptions","title","insertOption","list","push","updateOption","obj","form"],"sources":["/var/www/html/vue-projects/kanban-vuejs/src/store/modules/options/actions.js"],"sourcesContent":["export default {\n\n    // Busca os options value\n    fetchOptionsValue(context) {\n        console.log(\"busca options value\")\n        fetch(context.rootState.apiURL + \"options-value\")\n            .then(response => response.json())\n            .then(dados => {\n                context.commit(\"setOptionsValue\", dados.data)\n                return true;\n            })\n    },\n\n    deleteValueOption(context, item) {\n        fetch(context.rootState.apiURL + \"options-value/\" + item.id + \"/remove\", {method: \"POST\"})\n            .then(function (response) {\n                if (response.ok) {\n                    context.commit(\"removeOptionValue\", item.id)\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O item ${item.name} foi deletado com sucesso.`, \"\", \"success\");\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar deletar o item.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // Metodo responsável por realizar a inserção de um novo produto\n    insertOptionValue(context, item) {\n        // Processa a api\n        fetch(context.rootState.apiURL + \"options-value/\", {method: \"POST\", body: item})\n            .then(function (response) {\n                if (response.ok) {\n                    context.dispatch(\"fetchOptionsValue\");\n\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O valor foi inserido com sucesso.`, \"\", \"success\");\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar inserir o valor.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // -------------------------------------------\n\n    // Busca uma option em especifico\n    getOptionId: (context, id) => {\n        return context.state.listOptions.filter(data => data.id == id)\n    },\n\n    // Busca os options\n    fetchOptions(context) {\n        console.log(\"busca options\")\n        fetch(context.rootState.apiURL + \"options\")\n            .then(response => response.json())\n            .then(dados => {\n                context.commit(\"setOptions\", dados.data)\n                return true;\n            })\n    },\n\n    // Deleta um produto\n    deleteOptions(context, item) {\n        fetch(context.rootState.apiURL + \"options/\" + item.id + \"/remove\", {method: \"POST\"})\n            .then(function (response) {\n                if (response.ok) {\n                    context.commit(\"removeOption\", item.id)\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O item ${item.title} foi deletado com sucesso.`, \"\", \"success\");\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar deletar o item.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // Metodo responsável por realizar a inserção de um novo produto\n    insertOption(context, item) {\n        // Repassa para obj\n        var list = context.state.listOptions;\n\n        // Processa a api\n        fetch(context.rootState.apiURL + \"options/\", {method: \"POST\", body: item})\n            .then(function (response) {\n                if (response.ok) {\n                    // Recupera o retorno\n                    let data = response.json();\n                    data = data.data;\n\n                    // Atualiza a lista\n                    list.push(data);\n\n                    // salva a lista atualizada\n                    context.commit(\"setOptions\", list)\n\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`O item foi inserido com sucesso.`, \"\", \"success\");\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar inserir o item.\", \"\", \"error\");\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n\n    // Altera um option\n    updateOption(context, {obj, form}) {\n        // Processa a api\n        return fetch(context.rootState.apiURL + \"options/\" + obj.id + \"/edit\", {method: \"POST\", body: form})\n            .then(function (response) {\n                if (response.ok) {\n                    // Altera na listagem\n                    context.commit(\"updateOptionMutation\", obj);\n\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(`A informação foi alterada com sucesso.`, \"\", \"success\");\n                    return true;\n                } else {\n                    // eslint-disable-next-line no-undef\n                    Toast.fire(\"Ocorreu um erro ao tentar editar.\", \"\", \"error\");\n                    return false;\n                }\n            })\n            .catch(function (error) {\n                // eslint-disable-next-line no-undef\n                Toast.fire(error.message, \"\", \"error\");\n            })\n    },\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}