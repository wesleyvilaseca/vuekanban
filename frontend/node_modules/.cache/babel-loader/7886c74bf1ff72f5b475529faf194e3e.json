{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: {\n    Container,\n    CardComponent,\n    Draggable\n  },\n  data: () => ({\n    newCarIndex: {},\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {}\n    }\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({\n          name: this.newTask\n        });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n    handleDragStart(index, dragResult) {\n      const {\n        payload,\n        isSource\n      } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          lane: index,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.boards[index].cards[payload.index]\n          }\n        };\n      }\n    },\n    handleDrop(index, dropResult) {\n      const {\n        removedIndex,\n        addedIndex\n      } = dropResult;\n      if (index === this.dragginCard.lane && removedIndex === addedIndex) {\n        return;\n      }\n      if (removedIndex !== null) {\n        this.boards[index].cards.splice(removedIndex, 1);\n      }\n      if (addedIndex !== null) {\n        this.newCarIndex = {\n          board: this.boards[index],\n          others: {\n            index: addedIndex\n          }\n        };\n        this.boards[index].cards.splice(addedIndex, 0, this.dragginCard.cardData);\n      }\n      console.log(this.newCarIndex);\n    },\n    getChildPayload(index) {\n      return {\n        index\n      };\n    }\n  },\n  computed: {\n    ...mapState({\n      boards: state => state.kanban.board\n    })\n  },\n  mounted() {\n    this.getBoard().catch(err => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  }\n};","map":{"version":3,"mappings":";AAiCA;AACA,SAASA,SAAS,EAAEC,SAAQ,QAAS,iBAAiB;AACtD,SAASC,UAAU,EAAEC,QAAO,QAAS,MAAM;AAC3C,OAAOC,aAAY,MAAO,iCAAiC;AAE3D,eAAe;EACb;EACAC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IAAEN,SAAS;IAAEI,aAAa;IAAEH;EAAU,CAAC;EACnDM,IAAI,EAAE,OAAO;IACXC,WAAW,EAAE,CAAC,CAAC;IACfC,WAAW,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC,CAAC;MACTC,QAAQ,EAAE,CAAC;IACb;EACF,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3BY,GAAG,GAAG;MACJ,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC;UAAEZ,IAAI,EAAE,IAAI,CAACU;QAAQ,CAAC,CAAC;QAC5CG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC;QAC5B,IAAI,CAACD,OAAM,GAAI,EAAE;MACnB;IACF,CAAC;IAEDK,eAAe,CAACT,KAAK,EAAEU,UAAU,EAAE;MACjC,MAAM;QAAEC,OAAO;QAAEC;MAAS,IAAIF,UAAU;MACxC,IAAIE,QAAQ,EAAE;QACZ,IAAI,CAACd,WAAU,GAAI;UACjBC,IAAI,EAAEC,KAAK;UACXA,KAAK,EAAEW,OAAO,CAACX,KAAK;UACpBC,QAAQ,EAAE;YACR;YACA,GAAG,IAAI,CAACY,MAAM,CAACb,KAAK,CAAC,CAACc,KAAK,CAACH,OAAO,CAACX,KAAK;UAC3C;QACF,CAAC;MACH;IACF,CAAC;IACDe,UAAU,CAACf,KAAK,EAAEgB,UAAU,EAAE;MAC5B,MAAM;QAAEC,YAAY;QAAEC;MAAW,IAAIF,UAAU;MAC/C,IAAIhB,KAAI,KAAM,IAAI,CAACF,WAAW,CAACC,IAAG,IAAKkB,YAAW,KAAMC,UAAU,EAAE;QAClE;MACF;MAEA,IAAID,YAAW,KAAM,IAAI,EAAE;QACzB,IAAI,CAACJ,MAAM,CAACb,KAAK,CAAC,CAACc,KAAK,CAACK,MAAM,CAACF,YAAY,EAAE,CAAC,CAAC;MAClD;MAEA,IAAIC,UAAS,KAAM,IAAI,EAAE;QACvB,IAAI,CAACrB,WAAU,GAAI;UACjBuB,KAAK,EAAE,IAAI,CAACP,MAAM,CAACb,KAAK,CAAC;UACzBqB,MAAM,EAAE;YACNrB,KAAK,EAAEkB;UACT;QACF;QACA,IAAI,CAACL,MAAM,CAACb,KAAK,CAAC,CAACc,KAAK,CAACK,MAAM,CAC7BD,UAAU,EACV,CAAC,EACD,IAAI,CAACpB,WAAW,CAACG,QAAO,CACzB;MACH;MAEAM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,WAAW,CAAC;IAC/B,CAAC;IAEDyB,eAAe,CAACtB,KAAK,EAAE;MACrB,OAAO;QACLA;MACF,CAAC;IACH;EACF,CAAC;EACDuB,QAAQ,EAAE;IACR,GAAG/B,QAAQ,CAAC;MACVqB,MAAM,EAAGW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACL;IAClC,CAAC;EACH,CAAC;EACDM,OAAO,GAAG;IACR,IAAI,CAACC,QAAQ,EAAE,CAACC,KAAK,CAAEC,GAAG,IAAK;MAC7B;MACAtB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEqB,GAAG,CAAC;IAC3B,CAAC,CAAC;EACJ;AACF,CAAC","names":["Container","Draggable","mapActions","mapState","CardComponent","name","components","data","newCarIndex","dragginCard","lane","index","cardData","methods","add","newTask","arrBacklog","push","console","log","handleDragStart","dragResult","payload","isSource","boards","cards","handleDrop","dropResult","removedIndex","addedIndex","splice","board","others","getChildPayload","computed","state","kanban","mounted","getBoard","catch","err"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/kanban/KanbanView.vue"],"sourcesContent":["<template>\n  <div class=\"row flex-row flex-sm-nowrap py-3\">\n    <div\n      class=\"col-sm-6 col-md-4 col-xl-3\"\n      v-for=\"(board, index) in boards\"\n      :key=\"index\"\n    >\n      <div class=\"card bg-light\">\n        <div class=\"card-body card-body-atv\">\n          <h2 class=\"lane-title\">{{ board.title }}</h2>\n          <Container\n            group-name=\"trello\"\n            @drag-start=\"handleDragStart(index, $event)\"\n            @drop=\"handleDrop(index, $event)\"\n            :get-child-payload=\"getChildPayload\"\n          >\n            <Draggable v-for=\"(card, index) in board.cards\" :key=\"index\">\n              <CardComponent class=\"mt-2\" :title=\"card.title\" :subtitle=\"''\">\n                <template v-slot:body> {{ card.description }} </template>\n                <template v-slot:footer>\n                  <a href=\"#\" class=\"card-link\">Card link</a>\n                  <a href=\"#\" class=\"card-link\">Another link</a>\n                </template>\n              </CardComponent>\n            </Draggable>\n          </Container>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: { Container, CardComponent, Draggable },\n  data: () => ({\n    newCarIndex: {},\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {},\n    },\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({ name: this.newTask });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n\n    handleDragStart(index, dragResult) {\n      const { payload, isSource } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          lane: index,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.boards[index].cards[payload.index],\n          },\n        };\n      }\n    },\n    handleDrop(index, dropResult) {\n      const { removedIndex, addedIndex } = dropResult;\n      if (index === this.dragginCard.lane && removedIndex === addedIndex) {\n        return;\n      }\n\n      if (removedIndex !== null) {\n        this.boards[index].cards.splice(removedIndex, 1);\n      }\n\n      if (addedIndex !== null) {\n        this.newCarIndex = {\n          board: this.boards[index],\n          others: {\n            index: addedIndex\n          }\n        }\n        this.boards[index].cards.splice(\n          addedIndex,\n          0,\n          this.dragginCard.cardData\n        );\n      }\n\n      console.log(this.newCarIndex);\n    },\n\n    getChildPayload(index) {\n      return {\n        index,\n      };\n    },\n  },\n  computed: {\n    ...mapState({\n      boards: (state) => state.kanban.board,\n    }),\n  },\n  mounted() {\n    this.getBoard().catch((err) => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.placeholder {\n  background: rgba(33, 33, 33, 0.08) !important;\n  border-radius: 0.4rem !important;\n  transform: scaleY(0.85);\n  transform-origin: 0% 0%;\n}\n\n.card-body-atv {\n  min-height: 500px;\n}\n\n.smooth-dnd-container {\n  min-height: 500px !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}