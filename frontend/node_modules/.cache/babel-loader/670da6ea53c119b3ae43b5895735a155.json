{"ast":null,"code":"import PageTitle from \"@/components/template/PageTitle\";\nimport TableList from \"@/components/template/TableList\";\nimport { mapActions, mapState } from \"vuex\";\nimport Modal from \"@/components/template/Modal\";\nimport FormBrand from \"@/components/brands/FormBrand\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Marcas\",\n  components: {\n    FormBrand,\n    Modal,\n    TableList,\n    PageTitle\n  },\n  data: () => ({\n    pages: [{\n      name: \"Início\",\n      link: \"/\"\n    }],\n    campos: [{\n      text: \"ID\",\n      field: \"id\"\n    }, {\n      text: \"Titulo\",\n      field: \"name\"\n    }, {\n      text: \"Descrição\",\n      field: \"description\"\n    }],\n    isModalVisible: false,\n    itemEdita: {},\n    acoes: [\"edit\", \"delete\"]\n  }),\n  mounted() {\n    this.fetchBrands().catch(err => {\n      this.Toast.fire(\"Ocorreu um erro ao listar as marcas.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n  methods: {\n    ...mapActions([\"fetchBrands\", \"deleteBrand\", \"updateBrand\"]),\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    editar(dados) {\n      this.itemEdita = dados;\n      this.isModalVisible = true;\n    },\n    alterarMarca(dados) {\n      dados.id = this.itemEdita.id;\n      var form = new FormData();\n      form.set(\"name\", dados.name);\n      form.set(\"description\", dados.description);\n      if (this.updateBrand({\n        obj: dados,\n        form\n      })) {\n        this.closeModal();\n      }\n    },\n    deletar(item) {\n      // Verifica se realmente deve deletar\n      this.$swal.fire({\n        title: \"Deletar Marca\",\n        text: `Deseja realmente deletar a marca ${item.name}?`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        confirmButtonText: \"Sim, pode deletar.\",\n        cancelButtonColor: \"#d33\",\n        cancelButtonText: \"Cancelar\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.deleteBrand(item);\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapState({\n      listBrands: state => state.brands.listBrands\n    })\n  }\n};","map":{"version":3,"mappings":"AA8BA,OAAOA,SAAQ,MAAO,iCAAiC;AACvD,OAAOC,SAAQ,MAAO,iCAAiC;AACvD,SAASC,UAAU,EAAEC,QAAO,QAAS,MAAM;AAC3C,OAAOC,KAAI,MAAO,6BAA6B;AAC/C,OAAOC,SAAQ,MAAO,+BAA+B;AAErD,eAAe;EACb;EACAC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IAAEF,SAAS;IAAED,KAAK;IAAEH,SAAS;IAAED;EAAU,CAAC;EACtDQ,IAAI,EAAE,OAAO;IACXC,KAAK,EAAE,CACL;MACEH,IAAI,EAAE,QAAQ;MACdI,IAAI,EAAE;IACR,CAAC,CACF;IACDC,MAAM,EAAE,CACN;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC3B;MAAED,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAC,EACjC;MAAED,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAc,CAAC,CAC5C;IACDC,cAAc,EAAE,KAAK;IACrBC,SAAS,EAAE,CAAC,CAAC;IACbC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ;EAC1B,CAAC,CAAC;EACFC,OAAO,GAAG;IACR,IAAI,CAACC,WAAW,EAAE,CAACC,KAAK,CAAEC,GAAG,IAAK;MAChC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE,EAAE,EAAE,OAAO,CAAC;MACpEC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,GAAG,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC;EACDK,OAAO,EAAE;IACP,GAAGvB,UAAU,CAAC,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;IAE5DwB,UAAU,GAAG;MACX,IAAI,CAACZ,cAAa,GAAI,KAAK;IAC7B,CAAC;IAEDa,MAAM,CAACC,KAAK,EAAE;MACZ,IAAI,CAACb,SAAQ,GAAIa,KAAK;MACtB,IAAI,CAACd,cAAa,GAAI,IAAI;IAC5B,CAAC;IAEDe,YAAY,CAACD,KAAK,EAAE;MAClBA,KAAK,CAACE,EAAC,GAAI,IAAI,CAACf,SAAS,CAACe,EAAE;MAE5B,IAAIC,IAAG,GAAI,IAAIC,QAAQ,EAAE;MACzBD,IAAI,CAACE,GAAG,CAAC,MAAM,EAAEL,KAAK,CAACtB,IAAI,CAAC;MAC5ByB,IAAI,CAACE,GAAG,CAAC,aAAa,EAAEL,KAAK,CAACM,WAAW,CAAC;MAE1C,IAAI,IAAI,CAACC,WAAW,CAAC;QAAEC,GAAG,EAAER,KAAK;QAAEG;MAAK,CAAC,CAAC,EAAE;QAC1C,IAAI,CAACL,UAAU,EAAE;MACnB;IACF,CAAC;IAEDW,OAAO,CAACC,IAAI,EAAE;MACZ;MACA,IAAI,CAACC,KAAI,CACNjB,IAAI,CAAC;QACJkB,KAAK,EAAE,eAAe;QACtB5B,IAAI,EAAG,oCAAmC0B,IAAI,CAAChC,IAAK,GAAE;QACtDmC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,kBAAkB,EAAE,SAAS;QAC7BC,iBAAiB,EAAE,oBAAoB;QACvCC,iBAAiB,EAAE,MAAM;QACzBC,gBAAgB,EAAE;MACpB,CAAC,EACAC,IAAI,CAAEC,MAAM,IAAK;QAChB,IAAIA,MAAM,CAACC,WAAW,EAAE;UACtB,IAAI,CAACC,WAAW,CAACZ,IAAI,CAAC;QACxB;MACF,CAAC,CAAC;IACN;EACF,CAAC;EACDa,QAAQ,EAAE;IACR,GAAGhD,QAAQ,CAAC;MACViD,UAAU,EAAGC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF;IACtC,CAAC;EACH;AACF,CAAC","names":["PageTitle","TableList","mapActions","mapState","Modal","FormBrand","name","components","data","pages","link","campos","text","field","isModalVisible","itemEdita","acoes","mounted","fetchBrands","catch","err","Toast","fire","console","log","methods","closeModal","editar","dados","alterarMarca","id","form","FormData","set","description","updateBrand","obj","deletar","item","$swal","title","icon","showCancelButton","confirmButtonColor","confirmButtonText","cancelButtonColor","cancelButtonText","then","result","isConfirmed","deleteBrand","computed","listBrands","state","brands"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/brands/MarcasView.vue"],"sourcesContent":["<template>\n  <PageTitle page=\"Marcas\" :pages=\"pages\" />\n\n  <Modal v-show=\"isModalVisible\" title=\"Editar produto\" @close=\"closeModal\">\n    <template v-slot:content>\n      <FormBrand\n        title=\"\"\n        description=\"\"\n        :item=\"itemEdita\"\n        @processaFormulario=\"alterarMarca($event)\"\n      />\n    </template>\n  </Modal>\n\n  <!-- Table -->\n  <div class=\"row\">\n    <div class=\"col-xl-12\">\n      <TableList\n        title=\"Marcas cadastradas\"\n        :campos=\"campos\"\n        :itens=\"listBrands\"\n        :acoes=\"acoes\"\n        @editar=\"editar($event)\"\n        @deletar=\"deletar($event)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PageTitle from \"@/components/template/PageTitle\";\nimport TableList from \"@/components/template/TableList\";\nimport { mapActions, mapState } from \"vuex\";\nimport Modal from \"@/components/template/Modal\";\nimport FormBrand from \"@/components/brands/FormBrand\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Marcas\",\n  components: { FormBrand, Modal, TableList, PageTitle },\n  data: () => ({\n    pages: [\n      {\n        name: \"Início\",\n        link: \"/\",\n      },\n    ],\n    campos: [\n      { text: \"ID\", field: \"id\" },\n      { text: \"Titulo\", field: \"name\" },\n      { text: \"Descrição\", field: \"description\" },\n    ],\n    isModalVisible: false,\n    itemEdita: {},\n    acoes: [\"edit\", \"delete\"],\n  }),\n  mounted() {\n    this.fetchBrands().catch((err) => {\n      this.Toast.fire(\"Ocorreu um erro ao listar as marcas.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n  methods: {\n    ...mapActions([\"fetchBrands\", \"deleteBrand\", \"updateBrand\"]),\n\n    closeModal() {\n      this.isModalVisible = false;\n    },\n\n    editar(dados) {\n      this.itemEdita = dados;\n      this.isModalVisible = true;\n    },\n\n    alterarMarca(dados) {\n      dados.id = this.itemEdita.id;\n\n      var form = new FormData();\n      form.set(\"name\", dados.name);\n      form.set(\"description\", dados.description);\n\n      if (this.updateBrand({ obj: dados, form })) {\n        this.closeModal();\n      }\n    },\n\n    deletar(item) {\n      // Verifica se realmente deve deletar\n      this.$swal\n        .fire({\n          title: \"Deletar Marca\",\n          text: `Deseja realmente deletar a marca ${item.name}?`,\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          confirmButtonText: \"Sim, pode deletar.\",\n          cancelButtonColor: \"#d33\",\n          cancelButtonText: \"Cancelar\",\n        })\n        .then((result) => {\n          if (result.isConfirmed) {\n            this.deleteBrand(item);\n          }\n        });\n    },\n  },\n  computed: {\n    ...mapState({\n      listBrands: (state) => state.brands.listBrands,\n    }),\n  },\n};\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}