{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: {\n    Container,\n    CardComponent,\n    Draggable\n  },\n  data: () => ({\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {}\n    },\n    cards: {\n      backlog: [{\n        id: 1,\n        title: \"primeiro card\",\n        subtitle: \"\",\n        description: \"primeiro card desc\"\n      }, {\n        id: 2,\n        title: \"segundo card\",\n        subtitle: \"\",\n        description: \"segundo card desc\"\n      }, {\n        id: 3,\n        title: \"terceiro card\",\n        subtitle: \"\",\n        description: \"primeiro card desc\"\n      }],\n      dev: [{\n        id: 4,\n        title: \"title quarto card\",\n        subtitle: \"\",\n        description: \"desc quarto card\"\n      }, {\n        id: 5,\n        title: \"title quinto card\",\n        subtitle: \"\",\n        description: \"desc quinto card\"\n      }, {\n        id: 6,\n        title: \"title sexto card\",\n        subtitle: \"\",\n        description: \"desc sexto card\"\n      }],\n      testes: [{\n        id: 7,\n        title: \"title setimo card\",\n        subtitle: \"\",\n        description: \"desc setimo card\"\n      }],\n      concluido: []\n    },\n    pages: [{\n      name: \"Início\",\n      link: \"/\"\n    }]\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({\n          name: this.newTask\n        });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n    handleDragStart(lane, dragResult) {\n      const {\n        payload,\n        isSource\n      } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          //lane é boar, exemplo backlog\n          lane,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.cards[lane][payload.index]\n          }\n        };\n      }\n    },\n    handleDrop(lane, dropResult) {\n      const {\n        removedIndex,\n        addedIndex\n      } = dropResult;\n      if (lane === this.dragginCard.lane && removedIndex === addedIndex) {\n        return;\n      }\n      if (removedIndex !== null) {\n        //vai remover o index\n        this.cards[lane].splice(removedIndex, 1);\n      }\n      if (addedIndex !== null) {\n        this.cards[lane].splice(addedIndex, 0, this.dragginCard.cardData);\n      }\n    },\n    getChildPayload(index) {\n      return {\n        index\n      };\n    }\n  },\n  computed: {\n    ...mapState({\n      boards: state => state.kanban.board\n    })\n  },\n  mounted() {\n    this.getBoard().catch(err => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["Container","Draggable","mapActions","mapState","CardComponent","name","components","data","dragginCard","lane","index","cardData","cards","backlog","id","title","subtitle","description","dev","testes","concluido","pages","link","methods","add","newTask","arrBacklog","push","console","log","handleDragStart","dragResult","payload","isSource","handleDrop","dropResult","removedIndex","addedIndex","splice","getChildPayload","computed","boards","state","kanban","board","mounted","getBoard","catch","err"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/kanban/KanbanView.vue"],"sourcesContent":["<template>\n  <div class=\"row flex-row flex-sm-nowrap py-3\">\n    <div class=\"col-sm-6 col-md-4 col-xl-3\"  v-for=\"(board, index) in boards\"\n          :key=\"index\">\n      <div class=\"card bg-light\">\n        <div class=\"card-body card-body-atv\">\n          <h2 class=\"lane-title\">{{board.title}}</h2>\n          <Container\n            group-name=\"trello\"\n            @drag-start=\"handleDragStart('backlog', $event)\"\n            @drop=\"handleDrop('backlog', $event)\"\n            :get-child-payload=\"getChildPayload\"\n          >\n            <Draggable v-for=\"item in cards.backlog\" :key=\"item.id\">\n              <CardComponent\n                class=\"mt-2\"\n                :title=\"item.title\"\n                :subtitle=\"item.subtitle\"\n              >\n                <template v-slot:body> {{ item.description }} </template>\n                <template v-slot:footer>\n                  <a href=\"#\" class=\"card-link\">Card link</a>\n                  <a href=\"#\" class=\"card-link\">Another link</a>\n                </template>\n              </CardComponent>\n            </Draggable>\n          </Container>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import PageTitle from \"@/components/template/PageTitle\";\nimport { Container, Draggable } from \"vue3-smooth-dnd\";\nimport { mapActions, mapState } from \"vuex\";\nimport CardComponent from \"@/components/card/CardComponent\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"KanbanView\",\n  components: { Container, CardComponent, Draggable },\n  data: () => ({\n    dragginCard: {\n      lane: \"\",\n      index: -1,\n      cardData: {},\n    },\n    cards: {\n      backlog: [\n        {\n          id: 1,\n          title: \"primeiro card\",\n          subtitle: \"\",\n          description: \"primeiro card desc\",\n        },\n        {\n          id: 2,\n          title: \"segundo card\",\n          subtitle: \"\",\n          description: \"segundo card desc\",\n        },\n        {\n          id: 3,\n          title: \"terceiro card\",\n          subtitle: \"\",\n          description: \"primeiro card desc\",\n        },\n      ],\n      dev: [\n        {\n          id: 4,\n          title: \"title quarto card\",\n          subtitle: \"\",\n          description: \"desc quarto card\",\n        },\n        {\n          id: 5,\n          title: \"title quinto card\",\n          subtitle: \"\",\n          description: \"desc quinto card\",\n        },\n        {\n          id: 6,\n          title: \"title sexto card\",\n          subtitle: \"\",\n          description: \"desc sexto card\",\n        },\n      ],\n      testes: [\n        {\n          id: 7,\n          title: \"title setimo card\",\n          subtitle: \"\",\n          description: \"desc setimo card\",\n        },\n      ],\n      concluido: [],\n    },\n    pages: [\n      {\n        name: \"Início\",\n        link: \"/\",\n      },\n    ],\n  }),\n  methods: {\n    ...mapActions([\"getBoard\"]),\n    add() {\n      if (this.newTask) {\n        this.arrBacklog.push({ name: this.newTask });\n        console.log(this.arrBacklog);\n        this.newTask = \"\";\n      }\n    },\n\n    handleDragStart(lane, dragResult) {\n      const { payload, isSource } = dragResult;\n      if (isSource) {\n        this.dragginCard = {\n          //lane é boar, exemplo backlog\n          lane,\n          index: payload.index,\n          cardData: {\n            //payload.index é o index do array\n            ...this.cards[lane][payload.index],\n          },\n        };\n      }\n    },\n    handleDrop(lane, dropResult) {\n      const { removedIndex, addedIndex } = dropResult;\n      if (lane === this.dragginCard.lane && removedIndex === addedIndex) {\n        return;\n      }\n\n      if (removedIndex !== null) {\n        //vai remover o index\n        this.cards[lane].splice(removedIndex, 1);\n      }\n\n      if (addedIndex !== null) {\n        this.cards[lane].splice(addedIndex, 0, this.dragginCard.cardData);\n      }\n    },\n\n    getChildPayload(index) {\n      return {\n        index,\n      };\n    },\n  },\n  computed: {\n    ...mapState({\n      boards: (state) => state.kanban.board,\n    }),\n  },\n  mounted() {\n    this.getBoard().catch((err) => {\n      // this.Toast.fire(\"Ocorreu um erro ao listar os produtos.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.placeholder {\n  background: rgba(33, 33, 33, 0.08) !important;\n  border-radius: 0.4rem !important;\n  transform: scaleY(0.85);\n  transform-origin: 0% 0%;\n}\n\n.card-body-atv {\n  min-height: 500px;\n}\n\n.smooth-dnd-container {\n  min-height: 500px !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}