{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withCtx as _withCtx, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\nconst _hoisted_2 = {\n  class: \"col-xl-12\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PageTitle = _resolveComponent(\"PageTitle\");\n  const _component_FormBrand = _resolveComponent(\"FormBrand\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  const _component_TableList = _resolveComponent(\"TableList\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PageTitle, {\n    page: \"Marcas\",\n    pages: _ctx.pages\n  }, null, 8 /* PROPS */, [\"pages\"]), _withDirectives(_createVNode(_component_Modal, {\n    title: \"Editar produto\",\n    onClose: $options.closeModal\n  }, {\n    content: _withCtx(() => [_createVNode(_component_FormBrand, {\n      title: \"\",\n      description: \"\",\n      item: _ctx.itemEdita,\n      onProcessaFormulario: _cache[0] || (_cache[0] = $event => $options.alterarMarca($event))\n    }, null, 8 /* PROPS */, [\"item\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClose\"]), [[_vShow, _ctx.isModalVisible]]), _createCommentVNode(\" Table \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_TableList, {\n    title: \"Marcas cadastradas\",\n    campos: _ctx.campos,\n    itens: _ctx.listBrands,\n    acoes: _ctx.acoes,\n    onEditar: _cache[1] || (_cache[1] = $event => $options.editar($event)),\n    onDeletar: _cache[2] || (_cache[2] = $event => $options.deletar($event))\n  }, null, 8 /* PROPS */, [\"campos\", \"itens\", \"acoes\"])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAeOA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAW;;;;;;6DAfxBC,aAA0CC;IAA/BC,IAAI,EAAC,QAAQ;IAAEC,KAAK,EAAEC;sDAEjCJ,aASQK;IATuBC,KAAK,EAAC,gBAAgB;IAAEC,OAAK,EAAEC;;IAC3CC,OAAO,WACtB,MAKE,CALFT,aAKEU;MAJAJ,KAAK,EAAC,EAAE;MACRK,WAAW,EAAC,EAAE;MACbC,IAAI,EAAER,cAAS;MACfS,oBAAkB,sCAAEL,qBAAY,CAACM,MAAM;;;4CAN/BV,mBAAc,KAW7BW,8BAAc,EACdC,oBAWM,OAXNC,UAWM,GAVJD,oBASM,OATNE,UASM,GARJlB,aAOEmB;IANAb,KAAK,EAAC,oBAAoB;IACzBc,MAAM,EAAEhB,WAAM;IACdiB,KAAK,EAAEjB,eAAU;IACjBkB,KAAK,EAAElB,UAAK;IACZmB,QAAM,sCAAEf,eAAM,CAACM,MAAM;IACrBU,SAAO,sCAAEhB,gBAAO,CAACM,MAAM","names":["class","_createVNode","_component_PageTitle","page","pages","_ctx","_component_Modal","title","onClose","$options","content","_component_FormBrand","description","item","onProcessaFormulario","$event","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","_component_TableList","campos","itens","acoes","onEditar","onDeletar"],"sourceRoot":"","sources":["/var/www/html/vue-projects/kanban-vuejs/frontend/src/views/brands/MarcasView.vue"],"sourcesContent":["<template>\n  <PageTitle page=\"Marcas\" :pages=\"pages\" />\n\n  <Modal v-show=\"isModalVisible\" title=\"Editar produto\" @close=\"closeModal\">\n    <template v-slot:content>\n      <FormBrand\n        title=\"\"\n        description=\"\"\n        :item=\"itemEdita\"\n        @processaFormulario=\"alterarMarca($event)\"\n      />\n    </template>\n  </Modal>\n\n  <!-- Table -->\n  <div class=\"row\">\n    <div class=\"col-xl-12\">\n      <TableList\n        title=\"Marcas cadastradas\"\n        :campos=\"campos\"\n        :itens=\"listBrands\"\n        :acoes=\"acoes\"\n        @editar=\"editar($event)\"\n        @deletar=\"deletar($event)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PageTitle from \"@/components/template/PageTitle\";\nimport TableList from \"@/components/template/TableList\";\nimport { mapActions, mapState } from \"vuex\";\nimport Modal from \"@/components/template/Modal\";\nimport FormBrand from \"@/components/brands/FormBrand\";\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Marcas\",\n  components: { FormBrand, Modal, TableList, PageTitle },\n  data: () => ({\n    pages: [\n      {\n        name: \"Início\",\n        link: \"/\",\n      },\n    ],\n    campos: [\n      { text: \"ID\", field: \"id\" },\n      { text: \"Titulo\", field: \"name\" },\n      { text: \"Descrição\", field: \"description\" },\n    ],\n    isModalVisible: false,\n    itemEdita: {},\n    acoes: [\"edit\", \"delete\"],\n  }),\n  mounted() {\n    this.fetchBrands().catch((err) => {\n      this.Toast.fire(\"Ocorreu um erro ao listar as marcas.\", \"\", \"error\");\n      console.log(\"error\", err);\n    });\n  },\n  methods: {\n    ...mapActions([\"fetchBrands\", \"deleteBrand\", \"updateBrand\"]),\n\n    closeModal() {\n      this.isModalVisible = false;\n    },\n\n    editar(dados) {\n      this.itemEdita = dados;\n      this.isModalVisible = true;\n    },\n\n    alterarMarca(dados) {\n      dados.id = this.itemEdita.id;\n\n      var form = new FormData();\n      form.set(\"name\", dados.name);\n      form.set(\"description\", dados.description);\n\n      if (this.updateBrand({ obj: dados, form })) {\n        this.closeModal();\n      }\n    },\n\n    deletar(item) {\n      // Verifica se realmente deve deletar\n      this.$swal\n        .fire({\n          title: \"Deletar Marca\",\n          text: `Deseja realmente deletar a marca ${item.name}?`,\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          confirmButtonText: \"Sim, pode deletar.\",\n          cancelButtonColor: \"#d33\",\n          cancelButtonText: \"Cancelar\",\n        })\n        .then((result) => {\n          if (result.isConfirmed) {\n            this.deleteBrand(item);\n          }\n        });\n    },\n  },\n  computed: {\n    ...mapState({\n      listBrands: (state) => state.brands.listBrands,\n    }),\n  },\n};\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}